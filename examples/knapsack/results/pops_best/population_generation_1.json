{
     "algorithm": "The new algorithm calculates a score by combining the item's value with a logarithmic scaling factor based on the ratio of the item's weight to the remaining capacity, emphasizing items that provide high value while consuming a smaller proportion of the remaining capacity.",
     "code": "import numpy as np\nfrom numba import jit\n\n@jit(nopython=True)\ndef score(weight, value, remaining_capacity):\n    if weight > remaining_capacity:\n        return -np.inf  # Item cannot fit, assign lowest possible score\n    ratio = weight / remaining_capacity\n    scaling_factor = 1 / (1 + np.log(1 + ratio))\n    score = value * scaling_factor\n    return score",
     "objective": -0.13188,
     "other_inf": null
}