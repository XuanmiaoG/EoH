{
     "algorithm": "The new algorithm calculates the score by combining the item's value with a hyperbolic tangent function that scales based on the ratio of the item's weight to the remaining capacity, prioritizing items that balance high value and efficient use of capacity.",
     "code": "import numpy as np\nfrom numba import jit\n\n@jit(nopython=True)\ndef score(weight, value, remaining_capacity):\n    if weight > remaining_capacity:\n        return -np.inf  # Item cannot fit, assign lowest possible score\n    ratio = weight / remaining_capacity\n    score = value * np.tanh(1 / (ratio + 1e-9))  # Avoid division by zero\n    return score",
     "objective": -0.04466,
     "other_inf": null
}