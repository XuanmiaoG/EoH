{
     "algorithm": "The new algorithm selects the next node by choosing the unvisited node that minimizes the sum of the distance from the current node to the unvisited node and the distance from the unvisited node to the destination node, weighted by a factor inversely proportional to the distance from the unvisited node to the destination node.",
     "code": "import numpy as np\n\ndef select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):\n    min_score = float('inf')\n    next_node = None\n    \n    for node in unvisited_nodes:\n        if distance_matrix[node, destination_node] == 0:\n            score = float('inf')\n        else:\n            score = (distance_matrix[current_node, node] + distance_matrix[node, destination_node]) / distance_matrix[node, destination_node]\n        \n        if score < min_score:\n            min_score = score\n            next_node = node\n    \n    return next_node",
     "objective": 6.30341,
     "other_inf": null
}