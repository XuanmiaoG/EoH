{
     "algorithm": "```",
     "code": "import numpy as np\n\ndef score(item, bins):\n    # Calculate the normalized remaining capacity\n    normalized_capacity = bins / np.max(bins)\n    \n    # Calculate the penalty for bins with remaining capacity close to the item size\n    penalty = 1 / (1 + np.abs(bins - item))\n    \n    # Calculate the score as a combination of normalized capacity, penalty, and a logarithmic term\n    scores = normalized_capacity * penalty * np.log1p(bins)\n    \n    return scores",
     "objective": 0.03974,
     "other_inf": null
}