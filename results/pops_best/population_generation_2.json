{
     "algorithm": "```",
     "code": "import numpy as np\n\ndef calculate_total_distance(node, unvisited_nodes, distance_matrix):\n    total_distance = 0\n    for other_node in unvisited_nodes:\n        total_distance += distance_matrix[node][other_node]\n    return total_distance\n\ndef select_next_node(current_node, destination_node, unvisited_nodes, distance_matrix):\n    if len(unvisited_nodes) == 0:\n        return destination_node\n        \n    min_distance = float('inf')\n    next_node_index = unvisited_nodes[0]\n    \n    for node in unvisited_nodes:\n        total_distance = calculate_total_distance(node, unvisited_nodes, distance_matrix)\n        if total_distance < min_distance:\n            min_distance = total_distance\n            next_node_index = node\n            \n    return next_node_index",
     "objective": 1.33209,
     "other_inf": null
}