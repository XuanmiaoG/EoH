[
     {
          "algorithm": "```",
          "code": "import numpy as np\n\ndef score(weight, value, remaining_capacity):\n    if weight > remaining_capacity:\n        return -1e9\n    value_weight_ratio = value / weight\n    capacity_weight_ratio = remaining_capacity / weight\n    score = value_weight_ratio * np.log(capacity_weight_ratio)\n    return score",
          "objective": -0.02518,
          "other_inf": null
     },
     {
          "algorithm": "The new algorithm scores each item based on the product of its value and the remaining capacity, normalized by the square of its weight, prioritizing items with higher value and lower weight relative to the remaining capacity.",
          "code": "import numpy as np\n\ndef score(weight, value, remaining_capacity):\n    if weight > remaining_capacity:\n        return -1e9\n    score = (value * remaining_capacity) / (weight ** 2)\n    return score",
          "objective": -0.02024,
          "other_inf": null
     },
     {
          "algorithm": "The new algorithm scores each item based on a weighted combination of its value-to-weight ratio and the ratio of its weight to the remaining capacity, prioritizing items with a high value-to-weight ratio and a weight that is a smaller fraction of the remaining capacity.",
          "code": "import numpy as np\n\ndef score(weight, value, remaining_capacity):\n    if weight > remaining_capacity:\n        return -1e9\n    value_weight_ratio = value / weight\n    weight_capacity_ratio = weight / remaining_capacity\n    score = value_weight_ratio * (1 - weight_capacity_ratio)\n    return score",
          "objective": -0.01929,
          "other_inf": null
     },
     {
          "algorithm": "```",
          "code": "import numpy as np\n\ndef score(weight, value, remaining_capacity):\n    if weight > remaining_capacity:\n        return -1e9\n    value_density = value / weight\n    capacity_ratio = remaining_capacity / weight\n    score = value_density * np.log(1 + capacity_ratio)\n    return score",
          "objective": -0.00845,
          "other_inf": null
     }
]